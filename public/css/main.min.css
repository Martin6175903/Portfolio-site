@-webkit-keyframes fade{0%{opacity:0}to{opacity:1}}@keyframes fade{0%{opacity:0}to{opacity:1}}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}body{line-height:1;font:400 16.5px "Roboto",sans-serif}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}table{border-collapse:collapse;border-spacing:0}*{-webkit-box-sizing:border-box;box-sizing:border-box}.container{max-width:1240px;width:100%;margin:0 auto;padding:0 40px}body.locked{overflow:hidden}.main{margin-top:100px}.title{font:700 40px/50px "Poppins",sans-serif;color:#157698;text-transform:uppercase}.header{padding-top:62px}.header .info__items{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}.header .info__item:first-child{-ms-flex-preferred-size:30%;flex-basis:30%}.header .info__item:last-child{-ms-flex-preferred-size:60%;flex-basis:60%}.header .info__item-box:last-child{margin-top:40px;padding:40px 0;border-top:1px solid #999;border-bottom:1px solid #999}.header .info__item-box__title{font-size:50px;line-height:58.5px;font-weight:900;color:#157698;margin-bottom:19px}.header .info__item-box__title--two{font-weight:300;color:#a9a9a9}.header .info__item-box__text{font-size:30px;line-height:36px;color:#157698}.header .info__item:first-child img{width:100%}.header .info__item-box__links{padding-left:25px;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;width:80%}.header .info__item-box__link{-ms-flex-preferred-size:40%;flex-basis:40%;position:relative;padding-left:50px;margin-bottom:20px;color:#333;font-size:30px;line-height:36px;text-decoration:none}.header .info__item-box__link:before{position:absolute;left:0;top:5px;content:"";width:24px;height:24px}.header .info__item-box__link:nth-child(1):before{background:url(../../img/mainPage/header/vk.png)}.header .info__item-box__link:nth-child(2):before{background:url(../../img/mainPage/header/instagram.png)}.header .info__item-box__link:nth-child(3):before{background:url(../../img/mainPage/header/telegram.png)}.header .info__item-box__link:nth-child(4):before{background:url(../../img/mainPage/header/facebook.png)}.aside{max-width:440px}.profile{margin-bottom:60px}.profile__text{color:#4f4f4f;font-size:26px;line-height:36px;text-align:justify;margin:20px 0 40px}.profile__box-text{padding-left:50px;margin-bottom:20px;font-size:25px;line-height:36px;color:#4f4f4f;position:relative}.profile__box-text:before{content:"";position:absolute;left:0;top:7px;background-repeat:no-repeat}.profile__box-text:nth-child(1):before{background:url(../../img/mainPage/Profile/phone.svg);width:25px;height:27px}.profile__box-text:nth-child(2):before{background:url(../../img/mainPage/Profile/email.svg);width:29px;height:23px}.profile__box-text:nth-child(3):before{background:url(../../img/mainPage/Profile/place.svg);width:20px;height:32px;top:15px}.education__title{padding-left:70px;position:relative}.education__title:before{background:url(../../img/mainPage/education/education.png);content:"";position:absolute;width:57px;height:52px;left:0;top:-12px}.education__box{margin-top:30px}.education__box-title{font:700 26px/40px "Poppins",sans-serif;text-transform:uppercase}.education__box-text{font:600 26px/39px "Poppins",sans-serif;padding-left:40px;color:#999;position:relative;margin-bottom:15px}.education__box-text:before{background:#c4c4c4;position:absolute;content:"";left:0;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);width:30px;height:4px;border-radius:5px}.education__box-subtitle{font-size:30px;line-height:35px;color:#666}.reference{margin-top:45px}.reference__title{text-transform:none}.reference__box{margin-top:20px}.reference__box-link{display:block;width:30%;text-decoration:none;font-weight:300;font-size:30px;line-height:36px;color:#157698;margin-bottom:15px}.reference__box-link:hover{text-decoration:underline}@supports (-webkit-appearance:none){.header .info__item-box__link:nth-child(1):before{background-image:url(../../img/mainPage/header/vk.webp)}.header .info__item-box__link:nth-child(2):before{background-image:url(../../img/mainPage/header/instagram.webp)}.header .info__item-box__link:nth-child(3):before{background-image:url(../../img/mainPage/header/telegram.webp)}.header .info__item-box__link:nth-child(4):before{background-image:url(../../img/mainPage/header/facebook.webp)}.profile__box-text:nth-child(1):before{background-image:url(../../img/mainPage/Profile/phone.svg)}.profile__box-text:nth-child(2):before{background-image:url(../../img/mainPage/Profile/email.svg)}.profile__box-text:nth-child(3):before{background-image:url(../../img/mainPage/Profile/place.svg)}.education__title:before{background-image:url(../../img/mainPage/education/education.webp)}}@media (max-width:1339.98px){.container{max-width:1100px}}@media (max-width:991.98px){.container{max-width:970px}}@media (max-width:767.98px){.container{max-width:750px}}@media (max-width:479.98px){.container{max-width:none}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */